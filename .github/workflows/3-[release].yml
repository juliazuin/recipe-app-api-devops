permissions: write-all

name: 3-[release]

on:
  pull_request:
      types:
        - closed
      branches:
        - 'release/**'
env:
  ECR_REPO: ${{ vars.ECR_REPO }}

jobs:
  releasePlan:
    if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "sa-east-1"
      AWS_S3_BUCKET: "recipe-app-api-devops-tfstate-juliazuin2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3     

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Eport ecr_image varible
        run: echo "TF_VAR_ecr_image_api=${{ env.ECR_REPO }}:dev" >> $GITHUB_ENV
    
      - name: Terraform Init
        run: terraform init
    
      - name: Terraform set workspace
        run: terraform workspace select release || terraform workspace new release
    
      - name: Terraform plan
        run: terraform plan
        env:
          TF_VAR_db_username: ${{ secrets.TF_VAR_db_username }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_django_secret_key: ${{ secrets.TF_VAR_django_secret_key }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          

  releaseApply:
    if: github.event.pull_request.merged == true

    needs: releasePlan
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "sa-east-1"
      AWS_S3_BUCKET: "recipe-app-api-devops-tfstate-juliazuin2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3     

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Eport ecr_image varible
        run: echo "TF_VAR_ecr_image_api=${{ env.ECR_REPO }}:dev" >> $GITHUB_ENV
    
      - name: Terraform Init
        run: terraform init
    
      - name: Terraform set workspace
        run: terraform workspace select release
    
      - name: Terraform apply
        run: terraform apply --auto-approve
        env:
          TF_VAR_db_username: ${{ secrets.TF_VAR_db_username }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}          
          TF_VAR_django_secret_key: ${{ secrets.TF_VAR_django_secret_key }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
