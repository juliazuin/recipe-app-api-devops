permissions: write-all

name: 3-[release].yml
on:
  push:
    branches:
      - 'release/**'
env:
  ECR_REPO: ${{ vars.ECR_REPO }}

jobs:
  releasePlan:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "sa-east-1"
      AWS_S3_BUCKET: "recipe-app-api-devops-tfstate-juliazuin2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3     

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Eport ecr_image varible
        run: echo "TF_VAR_ecr_image_api=${{ env.ECR_REPO }}:dev" >> $GITHUB_ENV
    
      - name: Terraform Init
        run: terraform init
    
      - name: Terraform set workspace
        run: terraform workspace select release -or-create
    
      - name: Terraform plan
        run: terraform plan

  releaseApply:
    needs: releasePlan
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "sa-east-1"
      AWS_S3_BUCKET: "recipe-app-api-devops-tfstate-juliazuin2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3     

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Eport ecr_image varible
        run: echo "TF_VAR_ecr_image_api=${{ env.ECR_REPO }}:dev" >> $GITHUB_ENV
    
      - name: Terraform Init
        run: terraform init
    
      - name: Terraform set workspace
        run: terraform workspace select release
    
      - name: Terraform apply
        run: terraform apply --auto-approve
