permissions: write-all

name: 3-[prod].yml
on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'

env:
  ECR_REPO: ${{ vars.ECR_REPO }}

jobs:
  prodPlan:
    if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "sa-east-1"
      AWS_S3_BUCKET: "recipe-app-api-devops-tfstate-juliazuin2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3     

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Eport ecr_image varible
        run: echo "TF_VAR_ecr_image_api=${{ env.ECR_REPO }}:dev" >> $GITHUB_ENV
    
      - name: Terraform Init
        run: terraform init
    
      - name: Terraform set workspace
        run: terraform workspace select production || terraform workspace new production
    
      - name: Terraform plan
        run: terraform plan

  prodApply:
    if: github.event.pull_request.merged == true
    
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "sa-east-1"
      AWS_S3_BUCKET: "recipe-app-api-devops-tfstate-juliazuin2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    needs: prodPlan
    defaults:
      run:
        working-directory: ./deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3     

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Eport ecr_image varible
        run: echo "TF_VAR_ecr_image_api=${{ env.ECR_REPO }}:dev" >> $GITHUB_ENV
    
      - name: Terraform Init
        run: terraform init
    
      - name: Terraform set workspace
        run: terraform workspace select production
    
      - name: Terraform apply
        run: terraform apply --auto-approve
